openapi: 3.0.0
info:
  version: 2.1.0
  title: Collections API
  description: Collections API
paths:
  ## #####################################
  ## Posts
  ## #####################################
  /api/v1/posts:
    get:
      summary: Get posts
      description: Returns a list of posts with at least one content in the published status.
      operationId: getPosts
      parameters:
        - $ref: '#/components/parameters/language'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  posts:
                    type: array
                    items:
                      $ref: '#/components/schemas/postResponse'
      security:
        - apiKeyAuth: []

  /api/v1/post/{id}:
    get:
      summary: Get post
      description: Returns a post with at least one content in published status.
      operationId: getPost
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/language'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  post:
                    $ref: '#/components/schemas/postResponse'
      security:
        - apiKeyAuth: []

  ## #####################################
  ## Contents
  ## #####################################
  /api/v1/contents/{slug}:
    get:
      summary: Get content
      description: Returns a content with published status.
      operationId: getContent
      parameters:
        - $ref: '#/components/parameters/slug'
        - $ref: '#/components/parameters/draftKey'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/contentResponse'
      security:
        - apiKeyAuth: []

  ## #####################################
  ## Tags
  ## #####################################
  /api/v1/tags/{tagName}/contents:
    get:
      summary: Get tag contents
      description: Returns a list of tagged contents.
      operationId: getTagContents
      parameters:
        - $ref: '#/components/parameters/tagName'
        - $ref: '#/components/parameters/language'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  contents:
                    type: array
                    items:
                      $ref: '#/components/schemas/listContentResponse'
      security:
        - apiKeyAuth: []

  ## #####################################
  ## Users
  ## #####################################
  /api/v1/users/{userId}/contents:
    get:
      summary: Get user contents
      description: Returns a list of the creator's contents.
      operationId: getUserContents
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  contents:
                    type: array
                    items:
                      $ref: '#/components/schemas/listContentResponse'
      security:
        - apiKeyAuth: []

components:
  securitySchemes:
    apiKeyAuth:
      type: http
      scheme: bearer
      bearerFormat: uuid

  parameters:
    id:
      name: id
      in: path
      description: Primary Key (UUID)
      example: 'a8c4891c-6bc0-4f58-81c6-5e89bb572d4c'
      required: true
      schema:
        $ref: '#/components/schemas/id'
    slug:
      name: slug
      in: path
      description: Slug
      example: 'my-first-post'
      required: true
      schema:
        type: string
    tagName:
      name: tagName
      in: path
      description: Tag name
      example: 'seo'
      required: true
      schema:
        type: string
    language:
      name: language
      in: query
      description: Lowercase language code
      example: 'en-us'
      schema:
        $ref: '#/components/schemas/id'
    draftKey:
      name: draftKey
      in: query
      description: Key to fetch draft content
      example: 'c486dc26c7'
      schema:
        type: string

  schemas:
    ## #####################################
    ## Properties
    ## #####################################
    id:
      description: Primary Key (UUID)
      example: 'a8c4891c-6bc0-4f58-81c6-5e89bb572d4c'
      type: string
    slug:
      description: Slug
      example: 'my-first-post'
      type: string
    title:
      description: Title
      example: 'This is a title'
      type: string
    subtitle:
      description: Subtitle
      example: 'This is a subtitle'
      type: string
    body:
      description: Body
      example: 'This is a body'
      type: string
    bodyHtml:
      description: Body HTML
      example: '<p>This is a body</p>'
      type: string
    status:
      description: Status
      example: 'published'
      type: string
    language:
      description: Lowercase language code
      example: 'en-us'
      type: string
    version:
      description: Version
      example: 1
      type: integer
    coverUrl:
      description: Cover URL
      example: 'https://your-subdomain.collections.dev/assets/a8c4891c-6bc0-4f58-81c6-5e89bb572d4c'
      type: string
    metaTitle:
      description: Seo title
      example: 'This is a meta title'
      type: string
    metaDescription:
      description: Seo description
      example: 'This is a meta description'
      type: string
    publishedAt:
      description: Date the version of the post was published
      example: '2023-09-29T00:53:20.604Z'
      type: string
    author:
      type: object
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/id'
        name:
          description: Name
          example: 'John Doe'
          type: string
        avatarUrl:
          description: Avatar URL
          example: 'https://your-subdomain.collections.dev/assets/a8c4891c-6bc0-4f58-81c6-5e89bb572d4c'
          type: string
    tags:
      type: array
      items:
        type: object
        required:
          - id
          - name
        properties:
          id:
            $ref: '#/components/schemas/id'
          name:
            description: Name
            example: 'Tag Name'
            type: string

    ## #####################################
    ## Post
    ## #####################################
    postResponse:
      type: object
      required:
        - id
        - contents
      properties:
        id:
          $ref: '#/components/schemas/id'
        contents:
          type: array
          items:
            $ref: '#/components/schemas/listContentResponse'

    ## #####################################
    ## Content
    ## #####################################
    contentResponse:
      type: object
      description: Content
      required:
        - id
        - slug
        - title
        - body
        - bodyHtml
        - status
        - language
        - version
        - publishedAt
        - author
        - tags
      properties:
        id:
          $ref: '#/components/schemas/id'
        slug:
          $ref: '#/components/schemas/slug'
        title:
          $ref: '#/components/schemas/title'
        subtitle:
          $ref: '#/components/schemas/subtitle'
        body:
          $ref: '#/components/schemas/body'
        bodyHtml:
          $ref: '#/components/schemas/bodyHtml'
        status:
          $ref: '#/components/schemas/status'
        language:
          $ref: '#/components/schemas/language'
        version:
          $ref: '#/components/schemas/version'
        coverUrl:
          $ref: '#/components/schemas/coverUrl'
        metaTitle:
          $ref: '#/components/schemas/metaTitle'
        metaDescription:
          $ref: '#/components/schemas/metaDescription'
        publishedAt:
          $ref: '#/components/schemas/publishedAt'
        author:
          $ref: '#/components/schemas/author'
        tags:
          $ref: '#/components/schemas/tags'

    listContentResponse:
      type: object
      description: List content
      required:
        - id
        - slug
        - title
        - body
        - bodyHtml
        - status
        - language
        - version
        - publishedAt
        - author
      properties:
        id:
          $ref: '#/components/schemas/id'
        slug:
          $ref: '#/components/schemas/slug'
        title:
          $ref: '#/components/schemas/title'
        subtitle:
          $ref: '#/components/schemas/subtitle'
        body:
          $ref: '#/components/schemas/body'
        bodyHtml:
          $ref: '#/components/schemas/bodyHtml'
        status:
          $ref: '#/components/schemas/status'
        language:
          $ref: '#/components/schemas/language'
        version:
          $ref: '#/components/schemas/version'
        coverUrl:
          $ref: '#/components/schemas/coverUrl'
        metaTitle:
          $ref: '#/components/schemas/metaTitle'
        metaDescription:
          $ref: '#/components/schemas/metaDescription'
        publishedAt:
          $ref: '#/components/schemas/publishedAt'
        author:
          $ref: '#/components/schemas/author'
