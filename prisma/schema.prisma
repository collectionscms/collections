// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ProjectSetting {
  id          String   @id @default(uuid()) @db.Uuid
  name        String   @db.VarChar(255)
  beforeLogin String?  @db.VarChar(255)
  afterLogin  String?  @db.VarChar(255)
  createdAt   DateTime @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime @updatedAt @db.Timestamptz(6)
}

model User {
  id                      String   @id @default(uuid()) @db.Uuid
  name                    String   @db.VarChar(255)
  email                   String   @unique
  password                String   @db.VarChar(255)
  isActive                Boolean  @default(false)
  resetPasswordToken      String?  @db.VarChar(255)
  resetPasswordExpiration Int?
  apiKey                  String?  @db.VarChar(255)
  createdAt               DateTime @default(now()) @db.Timestamptz(6)
  updatedAt               DateTime @updatedAt @db.Timestamptz(6)
  roleId                  String   @db.Uuid
  role                    Role     @relation(fields: [roleId], references: [id])
}

model Role {
  id              String           @id @default(uuid()) @db.Uuid
  name            String           @db.VarChar(255)
  description     String?          @db.VarChar(255)
  adminAccess     Boolean          @default(false)
  createdAt       DateTime         @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime         @updatedAt @db.Timestamptz(6)
  users           User[]
  rolePermissions RolePermission[]
}

model Permission {
  id              String           @id @default(uuid()) @db.Uuid
  name            String           @db.VarChar(255)
  description     String?          @db.VarChar(255)
  createdAt       DateTime         @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime         @updatedAt @db.Timestamptz(6)
  rolePermissions RolePermission[]
}

model RolePermission {
  id           String     @id @default(uuid()) @db.Uuid
  roleId       String     @db.Uuid
  permissionId String     @db.Uuid
  createdAt    DateTime   @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime   @updatedAt @db.Timestamptz(6)
  role         Role       @relation(fields: [roleId], references: [id])
  permission   Permission @relation(fields: [permissionId], references: [id])

  @@unique([roleId, permissionId])
}

model File {
  id           String @id @default(uuid()) @db.Uuid
  storage      String @db.VarChar(255)
  fileName     String @db.VarChar(255)
  fileNameDisk String @db.VarChar(255)
  type         String @db.VarChar(255)
  fileSize     Int?
  width        Int?
  height       Int?
}
